ARM GAS  /tmp/ccQ98FRh.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"OLED_SSD1306.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.OLED_Write_Order,"ax",%progbits
  16              		.align	1
  17              		.global	OLED_Write_Order
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	OLED_Write_Order:
  24              	.LFB65:
  25              		.file 1 "Src/OLED_SSD1306.c"
   1:Src/OLED_SSD1306.c **** #include "OLED_SSD1306.h"
   2:Src/OLED_SSD1306.c **** #include "ASCII.h"
   3:Src/OLED_SSD1306.c **** 
   4:Src/OLED_SSD1306.c **** uint8_t Init_Data[] = {
   5:Src/OLED_SSD1306.c **** 	0xAE, 0x00, 0x10, 0x40, 0xB0, 0x81, 0xA1, 0xA4,
   6:Src/OLED_SSD1306.c **** 	0xA6, 0xA8, 0x3F, 0xC8, 0xD3, 0x00, 0xD5, 0x80, 
   7:Src/OLED_SSD1306.c **** 	0xD9, 0xDA, 0x12, 0xDB, 0x30, 0x8D, 0x10, 0xAF
   8:Src/OLED_SSD1306.c **** 	};
   9:Src/OLED_SSD1306.c **** 
  10:Src/OLED_SSD1306.c **** //向OLED进行写命令操作
  11:Src/OLED_SSD1306.c **** void OLED_Write_Order(uint8_t Order)
  12:Src/OLED_SSD1306.c **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
  38 0004 06AA     		add	r2, sp, #24
  39 0006 02F8010D 		strb	r0, [r2, #-1]!
  13:Src/OLED_SSD1306.c **** 	HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x00, I2C_MEMADD_SIZE_8BIT, &Order, 1, 0x100);
  40              		.loc 1 13 0
  41 000a 4FF48073 		mov	r3, #256
  42 000e 0293     		str	r3, [sp, #8]
  43 0010 0123     		movs	r3, #1
  44 0012 0193     		str	r3, [sp, #4]
  45 0014 0092     		str	r2, [sp]
ARM GAS  /tmp/ccQ98FRh.s 			page 2


  46 0016 0022     		movs	r2, #0
  47 0018 7821     		movs	r1, #120
  48 001a 0348     		ldr	r0, .L3
  49              	.LVL1:
  50 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
  51              	.LVL2:
  14:Src/OLED_SSD1306.c **** }
  52              		.loc 1 14 0
  53 0020 07B0     		add	sp, sp, #28
  54              	.LCFI2:
  55              		.cfi_def_cfa_offset 4
  56              		@ sp needed
  57 0022 5DF804FB 		ldr	pc, [sp], #4
  58              	.L4:
  59 0026 00BF     		.align	2
  60              	.L3:
  61 0028 00000000 		.word	hi2c1
  62              		.cfi_endproc
  63              	.LFE65:
  65              		.section	.text.OLED_Write_Data,"ax",%progbits
  66              		.align	1
  67              		.global	OLED_Write_Data
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	OLED_Write_Data:
  74              	.LFB66:
  15:Src/OLED_SSD1306.c **** 
  16:Src/OLED_SSD1306.c **** //向OLED进行写数据操作
  17:Src/OLED_SSD1306.c **** void OLED_Write_Data(uint8_t Data)
  18:Src/OLED_SSD1306.c **** {
  75              		.loc 1 18 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 8
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL3:
  80 0000 00B5     		push	{lr}
  81              	.LCFI3:
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 14, -4
  84 0002 87B0     		sub	sp, sp, #28
  85              	.LCFI4:
  86              		.cfi_def_cfa_offset 32
  87 0004 06AA     		add	r2, sp, #24
  88 0006 02F8010D 		strb	r0, [r2, #-1]!
  19:Src/OLED_SSD1306.c **** 	HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x40, I2C_MEMADD_SIZE_8BIT, &Data, 1, 0x100);
  89              		.loc 1 19 0
  90 000a 4FF48073 		mov	r3, #256
  91 000e 0293     		str	r3, [sp, #8]
  92 0010 0123     		movs	r3, #1
  93 0012 0193     		str	r3, [sp, #4]
  94 0014 0092     		str	r2, [sp]
  95 0016 4022     		movs	r2, #64
  96 0018 7821     		movs	r1, #120
  97 001a 0348     		ldr	r0, .L7
  98              	.LVL4:
ARM GAS  /tmp/ccQ98FRh.s 			page 3


  99 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 100              	.LVL5:
  20:Src/OLED_SSD1306.c **** }
 101              		.loc 1 20 0
 102 0020 07B0     		add	sp, sp, #28
 103              	.LCFI5:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0022 5DF804FB 		ldr	pc, [sp], #4
 107              	.L8:
 108 0026 00BF     		.align	2
 109              	.L7:
 110 0028 00000000 		.word	hi2c1
 111              		.cfi_endproc
 112              	.LFE66:
 114              		.section	.text.OLED_Init,"ax",%progbits
 115              		.align	1
 116              		.global	OLED_Init
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu softvfp
 122              	OLED_Init:
 123              	.LFB67:
  21:Src/OLED_SSD1306.c **** 
  22:Src/OLED_SSD1306.c **** //OLED初始化
  23:Src/OLED_SSD1306.c **** void OLED_Init()
  24:Src/OLED_SSD1306.c **** {	
 124              		.loc 1 24 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              	.LCFI6:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133 0002 84B0     		sub	sp, sp, #16
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 24
 136              	.LVL6:
 137              	.LBB2:
  25:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<24; i++)
 138              		.loc 1 25 0
 139 0004 0024     		movs	r4, #0
 140 0006 11E0     		b	.L10
 141              	.LVL7:
 142              	.L11:
  26:Src/OLED_SSD1306.c **** 	{
  27:Src/OLED_SSD1306.c **** 		HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x00, I2C_MEMADD_SIZE_8BIT, Init_Data+i, 1, 0x100);
 143              		.loc 1 27 0 discriminator 3
 144 0008 4FF48073 		mov	r3, #256
 145 000c 0293     		str	r3, [sp, #8]
 146 000e 0123     		movs	r3, #1
 147 0010 0193     		str	r3, [sp, #4]
 148 0012 084A     		ldr	r2, .L13
 149 0014 2244     		add	r2, r2, r4
ARM GAS  /tmp/ccQ98FRh.s 			page 4


 150 0016 0092     		str	r2, [sp]
 151 0018 0022     		movs	r2, #0
 152 001a 7821     		movs	r1, #120
 153 001c 0648     		ldr	r0, .L13+4
 154 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 155              	.LVL8:
  28:Src/OLED_SSD1306.c **** 		HAL_Delay(100);
 156              		.loc 1 28 0 discriminator 3
 157 0022 6420     		movs	r0, #100
 158 0024 FFF7FEFF 		bl	HAL_Delay
 159              	.LVL9:
  25:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<24; i++)
 160              		.loc 1 25 0 discriminator 3
 161 0028 0134     		adds	r4, r4, #1
 162              	.LVL10:
 163 002a E4B2     		uxtb	r4, r4
 164              	.LVL11:
 165              	.L10:
  25:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<24; i++)
 166              		.loc 1 25 0 is_stmt 0 discriminator 1
 167 002c 172C     		cmp	r4, #23
 168 002e EBD9     		bls	.L11
 169              	.LBE2:
  29:Src/OLED_SSD1306.c **** 	}
  30:Src/OLED_SSD1306.c **** }
 170              		.loc 1 30 0 is_stmt 1
 171 0030 04B0     		add	sp, sp, #16
 172              	.LCFI8:
 173              		.cfi_def_cfa_offset 8
 174              		@ sp needed
 175 0032 10BD     		pop	{r4, pc}
 176              	.LVL12:
 177              	.L14:
 178              		.align	2
 179              	.L13:
 180 0034 00000000 		.word	.LANCHOR0
 181 0038 00000000 		.word	hi2c1
 182              		.cfi_endproc
 183              	.LFE67:
 185              		.section	.text.OLED_clear,"ax",%progbits
 186              		.align	1
 187              		.global	OLED_clear
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	OLED_clear:
 194              	.LFB68:
  31:Src/OLED_SSD1306.c **** 
  32:Src/OLED_SSD1306.c **** //清屏
  33:Src/OLED_SSD1306.c **** void OLED_clear(void)
  34:Src/OLED_SSD1306.c **** {
 195              		.loc 1 34 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccQ98FRh.s 			page 5


 200              	.LCFI9:
 201              		.cfi_def_cfa_offset 16
 202              		.cfi_offset 3, -16
 203              		.cfi_offset 4, -12
 204              		.cfi_offset 5, -8
 205              		.cfi_offset 14, -4
 206              	.LVL13:
 207              	.LBB3:
  35:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<8; i++)
 208              		.loc 1 35 0
 209 0002 0025     		movs	r5, #0
 210 0004 09E0     		b	.L16
 211              	.LVL14:
 212              	.L18:
 213              	.LBB4:
  36:Src/OLED_SSD1306.c **** 	{
  37:Src/OLED_SSD1306.c **** 		OLED_Write_Order(0xB0+i);
  38:Src/OLED_SSD1306.c **** 		OLED_Write_Order(0x00);
  39:Src/OLED_SSD1306.c **** 		OLED_Write_Order(0x10);
  40:Src/OLED_SSD1306.c **** 		for (uint8_t j=0; j<128; j++)
  41:Src/OLED_SSD1306.c **** 		{
  42:Src/OLED_SSD1306.c **** 			OLED_Write_Data(0);
 214              		.loc 1 42 0 discriminator 3
 215 0006 0020     		movs	r0, #0
 216 0008 FFF7FEFF 		bl	OLED_Write_Data
 217              	.LVL15:
  40:Src/OLED_SSD1306.c **** 		{
 218              		.loc 1 40 0 discriminator 3
 219 000c 0134     		adds	r4, r4, #1
 220              	.LVL16:
 221 000e E4B2     		uxtb	r4, r4
 222              	.LVL17:
 223              	.L17:
  40:Src/OLED_SSD1306.c **** 		{
 224              		.loc 1 40 0 is_stmt 0 discriminator 1
 225 0010 14F0800F 		tst	r4, #128
 226 0014 F7D0     		beq	.L18
 227              	.LBE4:
  35:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<8; i++)
 228              		.loc 1 35 0 is_stmt 1 discriminator 2
 229 0016 0135     		adds	r5, r5, #1
 230              	.LVL18:
 231 0018 EDB2     		uxtb	r5, r5
 232              	.LVL19:
 233              	.L16:
  35:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<8; i++)
 234              		.loc 1 35 0 is_stmt 0 discriminator 1
 235 001a 072D     		cmp	r5, #7
 236 001c 0CD8     		bhi	.L21
  37:Src/OLED_SSD1306.c **** 		OLED_Write_Order(0x00);
 237              		.loc 1 37 0 is_stmt 1
 238 001e A5F15000 		sub	r0, r5, #80
 239 0022 C0B2     		uxtb	r0, r0
 240 0024 FFF7FEFF 		bl	OLED_Write_Order
 241              	.LVL20:
  38:Src/OLED_SSD1306.c **** 		OLED_Write_Order(0x10);
 242              		.loc 1 38 0
ARM GAS  /tmp/ccQ98FRh.s 			page 6


 243 0028 0020     		movs	r0, #0
 244 002a FFF7FEFF 		bl	OLED_Write_Order
 245              	.LVL21:
  39:Src/OLED_SSD1306.c **** 		for (uint8_t j=0; j<128; j++)
 246              		.loc 1 39 0
 247 002e 1020     		movs	r0, #16
 248 0030 FFF7FEFF 		bl	OLED_Write_Order
 249              	.LVL22:
 250              	.LBB5:
  40:Src/OLED_SSD1306.c **** 		{
 251              		.loc 1 40 0
 252 0034 0024     		movs	r4, #0
 253 0036 EBE7     		b	.L17
 254              	.LVL23:
 255              	.L21:
 256              	.LBE5:
 257              	.LBE3:
  43:Src/OLED_SSD1306.c **** 		}
  44:Src/OLED_SSD1306.c **** 		
  45:Src/OLED_SSD1306.c **** 	}
  46:Src/OLED_SSD1306.c **** }
 258              		.loc 1 46 0
 259 0038 38BD     		pop	{r3, r4, r5, pc}
 260              		.cfi_endproc
 261              	.LFE68:
 263              		.section	.text.OLED_open,"ax",%progbits
 264              		.align	1
 265              		.global	OLED_open
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu softvfp
 271              	OLED_open:
 272              	.LFB69:
  47:Src/OLED_SSD1306.c **** 
  48:Src/OLED_SSD1306.c **** //打开OLED
  49:Src/OLED_SSD1306.c **** //0x8D VCC电源设置
  50:Src/OLED_SSD1306.c **** //0x14 DCDC ON
  51:Src/OLED_SSD1306.c **** //0xA4 打开整个显示
  52:Src/OLED_SSD1306.c **** //0xAF 开启显示
  53:Src/OLED_SSD1306.c **** void OLED_open(void)
  54:Src/OLED_SSD1306.c **** {
 273              		.loc 1 54 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI10:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
  55:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0x8D);
 282              		.loc 1 55 0
 283 0002 8D20     		movs	r0, #141
 284 0004 FFF7FEFF 		bl	OLED_Write_Order
 285              	.LVL24:
  56:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0x14);
ARM GAS  /tmp/ccQ98FRh.s 			page 7


 286              		.loc 1 56 0
 287 0008 1420     		movs	r0, #20
 288 000a FFF7FEFF 		bl	OLED_Write_Order
 289              	.LVL25:
  57:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0xA4);
 290              		.loc 1 57 0
 291 000e A420     		movs	r0, #164
 292 0010 FFF7FEFF 		bl	OLED_Write_Order
 293              	.LVL26:
  58:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0xAF);
 294              		.loc 1 58 0
 295 0014 AF20     		movs	r0, #175
 296 0016 FFF7FEFF 		bl	OLED_Write_Order
 297              	.LVL27:
 298 001a 08BD     		pop	{r3, pc}
 299              		.cfi_endproc
 300              	.LFE69:
 302              		.section	.text.OLED_close,"ax",%progbits
 303              		.align	1
 304              		.global	OLED_close
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu softvfp
 310              	OLED_close:
 311              	.LFB70:
  59:Src/OLED_SSD1306.c **** }
  60:Src/OLED_SSD1306.c **** 
  61:Src/OLED_SSD1306.c **** //关闭OLED
  62:Src/OLED_SSD1306.c **** void OLED_close(void)
  63:Src/OLED_SSD1306.c **** {
 312              		.loc 1 63 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI11:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
  64:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0x8D);
 321              		.loc 1 64 0
 322 0002 8D20     		movs	r0, #141
 323 0004 FFF7FEFF 		bl	OLED_Write_Order
 324              	.LVL28:
  65:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0x10);
 325              		.loc 1 65 0
 326 0008 1020     		movs	r0, #16
 327 000a FFF7FEFF 		bl	OLED_Write_Order
 328              	.LVL29:
  66:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0xA5);
 329              		.loc 1 66 0
 330 000e A520     		movs	r0, #165
 331 0010 FFF7FEFF 		bl	OLED_Write_Order
 332              	.LVL30:
  67:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0xAE);
 333              		.loc 1 67 0
ARM GAS  /tmp/ccQ98FRh.s 			page 8


 334 0014 AE20     		movs	r0, #174
 335 0016 FFF7FEFF 		bl	OLED_Write_Order
 336              	.LVL31:
 337 001a 08BD     		pop	{r3, pc}
 338              		.cfi_endproc
 339              	.LFE70:
 341              		.section	.text.OLED_Display_Single,"ax",%progbits
 342              		.align	1
 343              		.global	OLED_Display_Single
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu softvfp
 349              	OLED_Display_Single:
 350              	.LFB71:
  68:Src/OLED_SSD1306.c **** }
  69:Src/OLED_SSD1306.c **** 
  70:Src/OLED_SSD1306.c **** //指定位置显示字符
  71:Src/OLED_SSD1306.c **** // x		页地址	范围：1 ~ 7
  72:Src/OLED_SSD1306.c **** // y		列地址	
  73:Src/OLED_SSD1306.c **** // Single	字符
  74:Src/OLED_SSD1306.c **** void OLED_Display_Single(uint8_t x, uint8_t y, char Single)
  75:Src/OLED_SSD1306.c **** {
 351              		.loc 1 75 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL32:
 356 0000 38B5     		push	{r3, r4, r5, lr}
 357              	.LCFI12:
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 3, -16
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 5, -8
 362              		.cfi_offset 14, -4
 363 0002 1546     		mov	r5, r2
  76:Src/OLED_SSD1306.c **** 	y = y + 2;
 364              		.loc 1 76 0
 365 0004 0231     		adds	r1, r1, #2
 366              	.LVL33:
 367 0006 CCB2     		uxtb	r4, r1
 368              	.LVL34:
  77:Src/OLED_SSD1306.c **** 	OLED_Write_Order(0xB0 + x);
 369              		.loc 1 77 0
 370 0008 5038     		subs	r0, r0, #80
 371              	.LVL35:
 372 000a C0B2     		uxtb	r0, r0
 373 000c FFF7FEFF 		bl	OLED_Write_Order
 374              	.LVL36:
  78:Src/OLED_SSD1306.c **** 	OLED_Write_Order(y/16 + 0x10);
 375              		.loc 1 78 0
 376 0010 2009     		lsrs	r0, r4, #4
 377 0012 1030     		adds	r0, r0, #16
 378 0014 FFF7FEFF 		bl	OLED_Write_Order
 379              	.LVL37:
  79:Src/OLED_SSD1306.c **** 	OLED_Write_Order(y%16 + 0x00);
 380              		.loc 1 79 0
ARM GAS  /tmp/ccQ98FRh.s 			page 9


 381 0018 04F00F00 		and	r0, r4, #15
 382 001c FFF7FEFF 		bl	OLED_Write_Order
 383              	.LVL38:
  80:Src/OLED_SSD1306.c **** 	
  81:Src/OLED_SSD1306.c **** 	Single = Single - '0';
 384              		.loc 1 81 0
 385 0020 303D     		subs	r5, r5, #48
 386 0022 EDB2     		uxtb	r5, r5
 387              	.LVL39:
 388              	.LBB6:
  82:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<=16; i++)
 389              		.loc 1 82 0
 390 0024 0024     		movs	r4, #0
 391              	.LVL40:
 392 0026 07E0     		b	.L27
 393              	.LVL41:
 394              	.L28:
  83:Src/OLED_SSD1306.c **** 	{
  84:Src/OLED_SSD1306.c **** 		OLED_Write_Data( ASCII_8x16[Single][i]);
 395              		.loc 1 84 0 discriminator 3
 396 0028 054B     		ldr	r3, .L30
 397 002a 03EB0513 		add	r3, r3, r5, lsl #4
 398 002e 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 399 0030 FFF7FEFF 		bl	OLED_Write_Data
 400              	.LVL42:
  82:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<=16; i++)
 401              		.loc 1 82 0 discriminator 3
 402 0034 0134     		adds	r4, r4, #1
 403              	.LVL43:
 404 0036 E4B2     		uxtb	r4, r4
 405              	.LVL44:
 406              	.L27:
  82:Src/OLED_SSD1306.c **** 	for(uint8_t i=0; i<=16; i++)
 407              		.loc 1 82 0 is_stmt 0 discriminator 1
 408 0038 102C     		cmp	r4, #16
 409 003a F5D9     		bls	.L28
 410              	.LBE6:
  85:Src/OLED_SSD1306.c **** 	}
  86:Src/OLED_SSD1306.c **** }
 411              		.loc 1 86 0 is_stmt 1
 412 003c 38BD     		pop	{r3, r4, r5, pc}
 413              	.LVL45:
 414              	.L31:
 415 003e 00BF     		.align	2
 416              	.L30:
 417 0040 00000000 		.word	.LANCHOR1
 418              		.cfi_endproc
 419              	.LFE71:
 421              		.global	Init_Data
 422              		.global	ASCII_8x16
 423              		.section	.data.Init_Data,"aw",%progbits
 424              		.align	2
 425              		.set	.LANCHOR0,. + 0
 428              	Init_Data:
 429 0000 AE       		.byte	-82
 430 0001 00       		.byte	0
 431 0002 10       		.byte	16
ARM GAS  /tmp/ccQ98FRh.s 			page 10


 432 0003 40       		.byte	64
 433 0004 B0       		.byte	-80
 434 0005 81       		.byte	-127
 435 0006 A1       		.byte	-95
 436 0007 A4       		.byte	-92
 437 0008 A6       		.byte	-90
 438 0009 A8       		.byte	-88
 439 000a 3F       		.byte	63
 440 000b C8       		.byte	-56
 441 000c D3       		.byte	-45
 442 000d 00       		.byte	0
 443 000e D5       		.byte	-43
 444 000f 80       		.byte	-128
 445 0010 D9       		.byte	-39
 446 0011 DA       		.byte	-38
 447 0012 12       		.byte	18
 448 0013 DB       		.byte	-37
 449 0014 30       		.byte	48
 450 0015 8D       		.byte	-115
 451 0016 10       		.byte	16
 452 0017 AF       		.byte	-81
 453              		.section	.rodata.ASCII_8x16,"a",%progbits
 454              		.align	2
 455              		.set	.LANCHOR1,. + 0
 458              	ASCII_8x16:
 459 0000 F8       		.byte	-8
 460 0001 FC       		.byte	-4
 461 0002 04       		.byte	4
 462 0003 C4       		.byte	-60
 463 0004 24       		.byte	36
 464 0005 FC       		.byte	-4
 465 0006 F8       		.byte	-8
 466 0007 00       		.byte	0
 467 0008 07       		.byte	7
 468 0009 0F       		.byte	15
 469 000a 09       		.byte	9
 470 000b 08       		.byte	8
 471 000c 08       		.byte	8
 472 000d 0F       		.byte	15
 473 000e 07       		.byte	7
 474 000f 00       		.byte	0
 475 0010 00       		.byte	0
 476 0011 10       		.byte	16
 477 0012 18       		.byte	24
 478 0013 FC       		.byte	-4
 479 0014 FC       		.byte	-4
 480 0015 00       		.byte	0
 481 0016 00       		.byte	0
 482 0017 00       		.byte	0
 483 0018 00       		.byte	0
 484 0019 08       		.byte	8
 485 001a 08       		.byte	8
 486 001b 0F       		.byte	15
 487 001c 0F       		.byte	15
 488 001d 08       		.byte	8
 489 001e 08       		.byte	8
 490 001f 00       		.byte	0
ARM GAS  /tmp/ccQ98FRh.s 			page 11


 491 0020 08       		.byte	8
 492 0021 0C       		.byte	12
 493 0022 84       		.byte	-124
 494 0023 C4       		.byte	-60
 495 0024 64       		.byte	100
 496 0025 3C       		.byte	60
 497 0026 18       		.byte	24
 498 0027 00       		.byte	0
 499 0028 0E       		.byte	14
 500 0029 0F       		.byte	15
 501 002a 09       		.byte	9
 502 002b 08       		.byte	8
 503 002c 08       		.byte	8
 504 002d 0C       		.byte	12
 505 002e 0C       		.byte	12
 506 002f 00       		.byte	0
 507 0030 08       		.byte	8
 508 0031 0C       		.byte	12
 509 0032 44       		.byte	68
 510 0033 44       		.byte	68
 511 0034 44       		.byte	68
 512 0035 FC       		.byte	-4
 513 0036 B8       		.byte	-72
 514 0037 00       		.byte	0
 515 0038 04       		.byte	4
 516 0039 0C       		.byte	12
 517 003a 08       		.byte	8
 518 003b 08       		.byte	8
 519 003c 08       		.byte	8
 520 003d 0F       		.byte	15
 521 003e 07       		.byte	7
 522 003f 00       		.byte	0
 523 0040 C0       		.byte	-64
 524 0041 E0       		.byte	-32
 525 0042 B0       		.byte	-80
 526 0043 98       		.byte	-104
 527 0044 FC       		.byte	-4
 528 0045 FC       		.byte	-4
 529 0046 80       		.byte	-128
 530 0047 00       		.byte	0
 531 0048 00       		.byte	0
 532 0049 00       		.byte	0
 533 004a 00       		.byte	0
 534 004b 08       		.byte	8
 535 004c 0F       		.byte	15
 536 004d 0F       		.byte	15
 537 004e 08       		.byte	8
 538 004f 00       		.byte	0
 539 0050 7C       		.byte	124
 540 0051 7C       		.byte	124
 541 0052 44       		.byte	68
 542 0053 44       		.byte	68
 543 0054 C4       		.byte	-60
 544 0055 C4       		.byte	-60
 545 0056 84       		.byte	-124
 546 0057 00       		.byte	0
 547 0058 04       		.byte	4
ARM GAS  /tmp/ccQ98FRh.s 			page 12


 548 0059 0C       		.byte	12
 549 005a 08       		.byte	8
 550 005b 08       		.byte	8
 551 005c 08       		.byte	8
 552 005d 0F       		.byte	15
 553 005e 07       		.byte	7
 554 005f 00       		.byte	0
 555 0060 F0       		.byte	-16
 556 0061 F8       		.byte	-8
 557 0062 4C       		.byte	76
 558 0063 44       		.byte	68
 559 0064 44       		.byte	68
 560 0065 C0       		.byte	-64
 561 0066 80       		.byte	-128
 562 0067 00       		.byte	0
 563 0068 07       		.byte	7
 564 0069 0F       		.byte	15
 565 006a 08       		.byte	8
 566 006b 08       		.byte	8
 567 006c 08       		.byte	8
 568 006d 0F       		.byte	15
 569 006e 07       		.byte	7
 570 006f 00       		.byte	0
 571 0070 0C       		.byte	12
 572 0071 0C       		.byte	12
 573 0072 04       		.byte	4
 574 0073 84       		.byte	-124
 575 0074 C4       		.byte	-60
 576 0075 7C       		.byte	124
 577 0076 3C       		.byte	60
 578 0077 00       		.byte	0
 579 0078 00       		.byte	0
 580 0079 00       		.byte	0
 581 007a 0F       		.byte	15
 582 007b 0F       		.byte	15
 583 007c 00       		.byte	0
 584 007d 00       		.byte	0
 585 007e 00       		.byte	0
 586 007f 00       		.byte	0
 587 0080 B8       		.byte	-72
 588 0081 FC       		.byte	-4
 589 0082 44       		.byte	68
 590 0083 44       		.byte	68
 591 0084 44       		.byte	68
 592 0085 FC       		.byte	-4
 593 0086 B8       		.byte	-72
 594 0087 00       		.byte	0
 595 0088 07       		.byte	7
 596 0089 0F       		.byte	15
 597 008a 08       		.byte	8
 598 008b 08       		.byte	8
 599 008c 08       		.byte	8
 600 008d 0F       		.byte	15
 601 008e 07       		.byte	7
 602 008f 00       		.byte	0
 603 0090 38       		.byte	56
 604 0091 7C       		.byte	124
ARM GAS  /tmp/ccQ98FRh.s 			page 13


 605 0092 44       		.byte	68
 606 0093 44       		.byte	68
 607 0094 44       		.byte	68
 608 0095 FC       		.byte	-4
 609 0096 F8       		.byte	-8
 610 0097 00       		.byte	0
 611 0098 00       		.byte	0
 612 0099 08       		.byte	8
 613 009a 08       		.byte	8
 614 009b 08       		.byte	8
 615 009c 0C       		.byte	12
 616 009d 07       		.byte	7
 617 009e 03       		.byte	3
 618 009f 00       		.byte	0
 619              		.text
 620              	.Letext0:
 621              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 622              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 623              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 624              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 625              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 626              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 627              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 628              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 629              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 630              		.file 11 "Inc/i2c.h"
 631              		.file 12 "Inc/ASCII.h"
ARM GAS  /tmp/ccQ98FRh.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 OLED_SSD1306.c
     /tmp/ccQ98FRh.s:16     .text.OLED_Write_Order:0000000000000000 $t
     /tmp/ccQ98FRh.s:23     .text.OLED_Write_Order:0000000000000000 OLED_Write_Order
     /tmp/ccQ98FRh.s:61     .text.OLED_Write_Order:0000000000000028 $d
     /tmp/ccQ98FRh.s:66     .text.OLED_Write_Data:0000000000000000 $t
     /tmp/ccQ98FRh.s:73     .text.OLED_Write_Data:0000000000000000 OLED_Write_Data
     /tmp/ccQ98FRh.s:110    .text.OLED_Write_Data:0000000000000028 $d
     /tmp/ccQ98FRh.s:115    .text.OLED_Init:0000000000000000 $t
     /tmp/ccQ98FRh.s:122    .text.OLED_Init:0000000000000000 OLED_Init
     /tmp/ccQ98FRh.s:180    .text.OLED_Init:0000000000000034 $d
     /tmp/ccQ98FRh.s:186    .text.OLED_clear:0000000000000000 $t
     /tmp/ccQ98FRh.s:193    .text.OLED_clear:0000000000000000 OLED_clear
     /tmp/ccQ98FRh.s:264    .text.OLED_open:0000000000000000 $t
     /tmp/ccQ98FRh.s:271    .text.OLED_open:0000000000000000 OLED_open
     /tmp/ccQ98FRh.s:303    .text.OLED_close:0000000000000000 $t
     /tmp/ccQ98FRh.s:310    .text.OLED_close:0000000000000000 OLED_close
     /tmp/ccQ98FRh.s:342    .text.OLED_Display_Single:0000000000000000 $t
     /tmp/ccQ98FRh.s:349    .text.OLED_Display_Single:0000000000000000 OLED_Display_Single
     /tmp/ccQ98FRh.s:417    .text.OLED_Display_Single:0000000000000040 $d
     /tmp/ccQ98FRh.s:428    .data.Init_Data:0000000000000000 Init_Data
     /tmp/ccQ98FRh.s:458    .rodata.ASCII_8x16:0000000000000000 ASCII_8x16
     /tmp/ccQ98FRh.s:424    .data.Init_Data:0000000000000000 $d
     /tmp/ccQ98FRh.s:454    .rodata.ASCII_8x16:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
